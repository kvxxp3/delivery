{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPageRoutingModule } from './auth-routing.module';\n\nimport { AuthPage } from './auth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    AuthPageRoutingModule\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, InfiniteScrollCustomEvent, LoadingController } from '@ionic/angular';\nimport { UserData } from '../interfaces/user-data';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n  form: FormGroup;\n  isLoading = false;\n  isLogged = false;\n  aprobar: any;\n  emailAUX: string = '';\n  users: any;\n  idDir: any;\n  typeAUX: string = '';\n  user: UserData = {\n    id: 0,\n    type: '',\n    email: '',\n    psw: 'string',\n    userId: ''\n  };\n  userAux: UserData = {\n    id: 0,\n    type: '',\n    email: '',\n    psw: 'string',\n    userId: ''\n  };\n  existeE=false;\n  existeU=false;\n  msg='a';\n  isLogin: boolean;\n\n  constructor(private authService: AuthService, private router: Router, private loadingCtrl: LoadingController, private alertController: AlertController) { }\n\n  async ngOnInit() {\n    this.form = new FormGroup({\n      userId: new FormControl(this.userAux.userId, {\n        updateOn: 'blur'\n      }),\n      type: new FormControl(this.userAux.type, {\n        updateOn: 'blur'\n      }),\n      email: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required]\n      }),\n      psw: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required]\n      })\n    });\n    this.userAux.email = this.form.value.email;\n    this.userAux.type = this.typeAUX;\n    this.userAux.psw = this.form.value.psw;\n    this.userAux.userId = this.form.value.userId;\n\n    await this.login();\n  }\n\n  onSwitch() {\n    this.isLogged = !this.isLogged;\n    console.log('SE ENCUENTRA EN Signup: ' + this.isLogged);\n  }\n\n  async presentAlert(){\n    const alert = await this.alertController.create({\n      header: 'Invalid credentials. Try again.',\n      buttons: [\n        {\n          text: 'OK',\n          role: 'confirm'\n        }\n      ],\n    });\n    await alert.present();\n  }\n\n  async login(){\n    if (!this.form.valid) {\n      return;\n    }\n    this.loadingCtrl.create({\n      message: 'Loading...'\n    }).then(async loadingEl => {\n      loadingEl.present();\n\n      this.userAux.email = this.form.value.email;\n      this.userAux.type = this.typeAUX;\n      this.userAux.psw = this.form.value.psw;\n      this.userAux.userId = this.form.value.userId;\n      console.log('INFO DEL FORM');\n      console.log(this.userAux.email, this.userAux.type, this.userAux.psw, this.userAux.userId);\n\n      //si esta para registrarse\n      if (this.isLogged) {\n        let data = await this.authService.postUserSync(this.userAux.userId, this.userAux.psw, this.userAux.email, this.userAux.type);\n        console.log('SE AUTORIZA EL REGISTRO: ' + data);\n\n        if(data == true){ //si las credenciales son correctas\n          //busca el id de usuario\n          let id = await this.authService.getIDSync(this.userAux.email);\n          //guarda el nuevo id en el servicio\n          this.authService.updateUserId(id);\n          //guarda el nuevo tipo en el servicio\n          this.authService.updateUserType(this.userAux.type);\n\n          //IF el tipo usuario es R da de alta direccion\n          // if(this.userAux.type.match('R')){\n          //   let dir = await this.authService.postDirSync(this.auxDir.calle, this.auxDir.colonia, this.auxDir.numero, this.auxDir.ref);\n          //   console.log('SE REGISTRA LA DIR: ' + dir);\n          //   //get id de la dir\n          //   this.idDir = await this.authService.getIDDIR(this.auxDir.calle, this.auxDir.numero);\n          //   this.authService.updateIDDireccion(this.idDir);\n          // }\n          // //AMBOS DAN ALTA TARJETA\n          // let tarjeta = await this.authService.postTarjetaSync(this.auxTarj.tipo, this.auxTarj.clabe);\n          // console.log('SE REGISTRA LA TARJETA: ' + tarjeta);\n          // //get id de la dir\n          // let idTarj = await this.authService.getIDDIR(this.auxDir.calle, this.auxDir.numero);\n          // this.authService.updateIDTarjeta(idTarj);\n\n          // //IF R DA DE ALTA RESTAURANTE\n          // if(this.userAux.type.match('R')){\n          //   let res = await this.authService.postRestaurantSync(this.auxRes.nombre, this.auxRes.tel, this.auxRes.sucursal, id, this.idDir, idTarj);\n          //   console.log('SE REGISTRA EL RESTAURANTE: ' + res);\n          // }else{\n          //   //ELSE ALTA CLIENTE\n          //   let cl = await this.authService.postClienteSync(this.auxCl.nombre, this.auxCl.app, this.auxCl.apm, this.auxCl.tel, id, idTarj);\n          //   console.log('SE REGISTRA EL CLIENTE: ' + cl);\n          // }          \n\n          //el estado de login cambia a true en el servicio\n          this.authService.login();\n          //termina loading screen\n          loadingEl.dismiss();\n          this.form.reset();\n          this.router.navigate(['/home/tabs/discover']);\n          return;\n\n        }else{ //si las credenciales son incorrectas\n          loadingEl.dismiss();\n          this.form.reset();\n          this.presentAlert();\n        } \n\n      //si esta para login\n      } else {     \n        let data = await this.authService.getUserSync(this.userAux.email, this.userAux.psw);\n        console.log('SE AUTORIZA EL LOGIN: ' + data);\n\n        if(data == true){ //si las credenciales son correctas\n          //busca el id de usuario\n          let id = await this.authService.getIDSync(this.userAux.email);\n          //guarda el nuevo id en el servicio\n          this.authService.updateUserId(id);\n          //busca el tipo de usuario\n          let tipo = await this.authService.getTypeSync(id);\n          //guarda el nuevo tipo en el servicio\n          this.authService.updateUserType(tipo);\n          //el estado de login cambia a true en el servicio\n          this.authService.login();\n          //termina loading screen\n          loadingEl.dismiss();\n          this.form.reset();\n          this.router.navigate(['/home/tabs/discover']);\n          return;\n\n        }else{ //si las credenciales son incorrectas\n          loadingEl.dismiss();\n          this.form.reset();\n          this.presentAlert();\n        } \n      }\n    });\n  }\n\n  //Listener del evento del ion-radio-group para obtener el valor del ion-radio seleccionado\n  selectedValue($event){\n    console.log($event.target.value);\n    this.typeAUX = $event.target.value;\n  }\n  \n}\n"],"names":["Component","FormControl","FormGroup","Validators","Router","AlertController","LoadingController","AuthService","AuthPage","constructor","authService","router","loadingCtrl","alertController","id","type","email","psw","userId","ngOnInit","form","userAux","updateOn","validators","required","value","typeAUX","login","onSwitch","isLogged","console","log","presentAlert","alert","create","header","buttons","text","role","present","valid","message","then","loadingEl","data","postUserSync","getIDSync","updateUserId","updateUserType","dismiss","reset","navigate","getUserSync","tipo","getTypeSync","selectedValue","$event","target","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}