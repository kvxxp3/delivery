{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEhB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;KACpB;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBO;AACM;AACF;AAEA;AAEiB;AAEvB;IAW1B,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAT1B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,uEAAqB;SACtB;QACD,YAAY,EAAE,CAAC,gDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBuB;AAET;AACU;AACN;IAOhC,QAAQ,SAAR,QAAQ;IAInB,YAAoB,WAAwB,EAAU,MAAc,EAAU,WAA8B;QAAxF,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAmB;QAH5G,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAG,IAAI,CAAC;IAEgG,CAAC;IAEjH,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW;aACb,MAAM,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;aACzD,IAAI,CAAC,SAAS,CAAC,EAAE;YAChB,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,SAAS,CAAC,OAAO,EAAE,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACnD,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QACnD,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAG,CAAC,IAAI,CAAC,KAAK,EAAC;YACb,OAAO;SACR;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAExB,IAAG,IAAI,CAAC,QAAQ,EAAC;YACf,eAAe;SAChB;aAAI;YACH,iBAAiB;SAClB;IACH,CAAC;CAEF;;YArDQ,sDAAW;YAFX,mDAAM;YACN,6DAAiB;;AAQb,QAAQ;IALpB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iEAA+B;;KAEhC,CAAC;GACW,QAAQ,CA8CpB;AA9CoB","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPageRoutingModule } from './auth-routing.module';\n\nimport { AuthPage } from './auth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AuthPageRoutingModule\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n  isLoading = false;\n  isLogged = true;\n\n  constructor(private authService: AuthService, private router: Router, private loadingCtrl: LoadingController) { }\n\n  ngOnInit() {\n  }\n\n  onLogin() {\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Logging in...' })\n      .then(loadingEL => {\n        loadingEL.present();\n        setTimeout(() => {\n          this.isLoading = false;\n          loadingEL.dismiss();\n          this.router.navigateByUrl('/home/tabs/discover');\n        }, 1500);\n      });\n    this.authService.login();\n    setTimeout(() => {\n      this.router.navigateByUrl('/home/tabs/discover');\n    }, 1500);\n  }\n\n  onSwitch(){\n    this.isLogged = !this.isLogged;\n  }\n\n  onSubmit(form: NgForm){\n    if(!form.valid){\n      return;\n    }\n    const email = form.value.email;\n    const psw = form.value.psw;\n    console.log(email, psw);\n\n    if(this.isLogged){\n      //request login\n    }else{\n      //request sign up\n    }\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}